# Generated by Django 2.2.6 on 2019-11-15 00:16

import api.models
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dateOfBirth', models.DateField(default=datetime.date.today)),
                ('middleName', models.CharField(default='', max_length=32)),
                ('token', models.CharField(default='', max_length=64)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AddressData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentsData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offerLetter', models.BooleanField(default=False)),
                ('salarySlip', models.BooleanField(default=False)),
                ('expOrRelLetter', models.BooleanField(default=False)),
                ('resignAccept', models.BooleanField(default=False)),
                ('promotion', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ExperienceData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('company', models.TextField(max_length=250)),
                ('industry', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('functionalArea', models.CharField(max_length=32)),
                ('role', models.CharField(max_length=32)),
                ('scope', models.CharField(max_length=32)),
                ('summary', models.TextField(max_length=524)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('duration', models.DurationField()),
                ('current', models.BooleanField()),
                ('salary', models.IntegerField()),
                ('noticePeriod', models.DurationField()),
                ('documents', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.DocumentsData')),
            ],
        ),
        migrations.CreateModel(
            name='Graduation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseTitle', models.CharField(max_length=32)),
                ('institute', models.TextField(max_length=250)),
                ('college', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('degree', models.CharField(max_length=32)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('type', models.CharField(max_length=32)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='HigherSecEqDiploma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseTitle', models.CharField(max_length=32)),
                ('institute', models.TextField(max_length=250)),
                ('college', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('degree', models.CharField(max_length=32)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('type', models.CharField(max_length=32)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='HigherSecondary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseTitle', models.CharField(max_length=32)),
                ('institute', models.TextField(max_length=250)),
                ('college', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('degree', models.CharField(max_length=32)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('type', models.CharField(max_length=32)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='HighSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.TextField(max_length=250)),
                ('college', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('degree', models.CharField(max_length=32)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('type', models.CharField(max_length=32)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('description', models.TextField(max_length=360)),
            ],
        ),
        migrations.CreateModel(
            name='OtherDiploma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseTitle', models.CharField(max_length=32)),
                ('institute', models.TextField(max_length=250)),
                ('college', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('degree', models.CharField(max_length=32)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('type', models.CharField(max_length=32)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='OtherQualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseTitle', models.CharField(max_length=32)),
                ('institute', models.TextField(max_length=250)),
                ('college', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('degree', models.CharField(max_length=32)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('type', models.CharField(max_length=32)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='PostGraduation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseTitle', models.CharField(max_length=32)),
                ('institute', models.TextField(max_length=250)),
                ('college', models.CharField(max_length=32)),
                ('department', models.CharField(max_length=32)),
                ('degree', models.CharField(max_length=32)),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('type', models.CharField(max_length=32)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fatherFirstName', models.CharField(max_length=32)),
                ('fatherMiddleName', models.CharField(blank=True, default='', max_length=32, null=True)),
                ('fatherLastName', models.CharField(max_length=32)),
                ('currentSalary', models.IntegerField()),
                ('expectedSalary', models.IntegerField()),
                ('panNumber', models.CharField(max_length=32)),
                ('aadharNumber', models.IntegerField()),
                ('gender', models.CharField(max_length=10)),
                ('message', models.TextField(max_length=256)),
                ('image', models.ImageField(upload_to=api.models.UploadToPathAndRename('/home/yagya/Documents/Code/DjangoApi/media/profile'), verbose_name='Profile Picture')),
                ('resume', models.FileField(upload_to=api.models.UploadToPathAndRename('/home/yagya/Documents/Code/DjangoApi/media/resume'), verbose_name='Resume')),
                ('facebook', models.URLField(max_length=128)),
                ('twitter', models.URLField(max_length=128)),
                ('linkedIn', models.URLField(max_length=128)),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.AddressData')),
                ('education', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Education')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PresentAddressData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressLine1', models.TextField(blank=True, max_length=256, null=True)),
                ('addressLine2', models.TextField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=32, null=True)),
                ('state', models.CharField(blank=True, max_length=32, null=True)),
                ('zipCode', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=32, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PermanentAddressData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addressLine1', models.TextField(blank=True, max_length=256, null=True)),
                ('addressLine2', models.TextField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=32, null=True)),
                ('state', models.CharField(blank=True, max_length=32, null=True)),
                ('zipCode', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=32, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('read', models.BooleanField()),
                ('write', models.BooleanField()),
                ('speak', models.BooleanField()),
                ('native', models.BooleanField()),
                ('userData', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='api.UserData')),
            ],
        ),
        migrations.CreateModel(
            name='ImplementedSkillSetData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('proficiency', models.CharField(max_length=32)),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='implementedSkills', to='api.ExperienceData')),
            ],
        ),
        migrations.AddField(
            model_name='experiencedata',
            name='userData',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experience', to='api.UserData'),
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluationData', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('audioFile', models.FileField(upload_to=api.models.UploadToPathAndRename('/home/yagya/Documents/Code/DjangoApi/media/audioFiles'), verbose_name='audioFile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='education',
            name='graduation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Graduation'),
        ),
        migrations.AddField(
            model_name='education',
            name='highSchool',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.HighSchool'),
        ),
        migrations.AddField(
            model_name='education',
            name='higherSecEqDiploma',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.HigherSecEqDiploma'),
        ),
        migrations.AddField(
            model_name='education',
            name='higherSecondary',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.HigherSecondary'),
        ),
        migrations.AddField(
            model_name='education',
            name='otherDiploma',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.OtherDiploma'),
        ),
        migrations.AddField(
            model_name='education',
            name='otherQualification',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.OtherQualification'),
        ),
        migrations.AddField(
            model_name='education',
            name='postGraduation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.PostGraduation'),
        ),
        migrations.AddField(
            model_name='addressdata',
            name='permanentAddress',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.PermanentAddressData'),
        ),
        migrations.AddField(
            model_name='addressdata',
            name='presentAddress',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.PresentAddressData'),
        ),
        migrations.AddField(
            model_name='addressdata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AcquiredSkillSetData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('proficiency', models.CharField(max_length=32)),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acquiredSkills', to='api.ExperienceData')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stars', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'movie')},
                'index_together': {('user', 'movie')},
            },
        ),
    ]
